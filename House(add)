/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project0;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


public class house {
    

public house() {
        generateJTable();
}

//This method helps to generate Table with buttons like Add, Update, Delete

private void generateJTable() {

// create JFrame and JTable
JFrame frame = new JFrame("house ");
final JTable table = new JTable();

// create a table model and set a Column Identifiers to this model
Object[] columns = { "Name", "Ic no.", "Email", "house type" };

final DefaultTableModel model = new DefaultTableModel();
model.setColumnIdentifiers(columns);

final TableRowSorter<TableModel> sorter = new TableRowSorter<>(model);
    table.setRowSorter(sorter);

//create a data of arraylist for the table
ArrayList<infohouse> list = new ArrayList<>();

for (int i = 0; i < list.size(); i++){
   String name = list.get(i).getName();
   String ic = list.get(i).getIc();
   String Email = list.get(i).getEmail();
   String HT = list.get(i).getHT();

Object[] data = {name , ic , Email , HT};

model.addRow(data);

}
    
// set the model to the table
table.setModel(model);

// Change A JTable Background Color, Font Size, Font Color, Row Height
table.setBackground(Color.green.brighter());
table.setForeground(Color.black);
Font font = new Font("", 1, 18);
table.setFont(font);
table.setRowHeight(30);
table.setFont(font);
table.setRowHeight(30);

//set title
JLabel title = new JLabel("Welcome to the Customer Info.......!"); 
title.setBounds(330, 10,350, 20);
title.setFont(new Font("Times New Roman", Font.BOLD, 20)); 
// create JTextFields to hold the value
final JTextField textname = new JTextField();
final JTextField textic = new JTextField();
final JTextField textemail = new JTextField();
final JTextField textHT = new JTextField();

// create JtextField to hold search 
final JTextField Jsearch = new JTextField();
final JLabel Lsearch =new JLabel("Search/Filter");
Jsearch.setBounds(500, 270, 100, 25);
Lsearch.setBounds(400, 270, 100, 25);

// create JLabel to hold the label
final JLabel name = new JLabel("Name :"); 
final JLabel ic = new JLabel("Ic no. :"); 
final JLabel email = new JLabel("Email :"); 
final JLabel HT = new JLabel("Customer No. :"); 

// create JButtons to add the action
JButton btnAdd = new JButton("Add");
JButton btnDelete = new JButton("Delete");
JButton btnUpdate = new JButton("Update");
JButton btnExit = new JButton("Exit");
JButton btnSave = new JButton("Save");
JButton btnImport = new JButton("Import");

textname.setBounds(125, 270, 100, 25);
textic.setBounds(125, 300, 100, 25);
textemail.setBounds(125, 330, 100, 25);
textHT.setBounds(125, 360, 100, 25);

name.setBounds(20, 270, 100, 25);
ic.setBounds(20, 300, 100, 25);
email.setBounds(20, 330, 100, 25);       
HT.setBounds(20, 360, 100, 25);        

btnAdd.setBounds(250, 270, 100, 25);
btnUpdate.setBounds(250, 315, 100, 25);
btnDelete.setBounds(250, 360, 100, 25);
btnExit.setBounds(750,270, 100, 25);
btnSave.setBounds(750,300, 100, 25);
btnImport.setBounds(750, 360, 100, 25);

// create JScrollPane
JScrollPane pane = new JScrollPane(table);
pane.setBounds(30, 50, 880, 200);

frame.setLayout(null);

frame.add(pane);
// add JPanel and JField for search
frame.add(Jsearch);
frame.add(Lsearch);

// add JTextFields to the jframe
frame.add(textname);
frame.add(textic);
frame.add(textemail);
frame.add(textHT);
frame.add(title);

// add JPanel to the jframe
frame.add(name);
frame.add(ic);
frame.add(email);
frame.add(HT);

// add JButtons to the jframe
frame.add(btnAdd);
frame.add(btnDelete);
frame.add(btnUpdate);
frame.add(btnExit);
frame.add(btnSave);
frame.add(btnImport);

// create an array of objects to set the row data
final Object[] row = new Object[4];

btnSave.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {
String filePath = "C:\\Users\\a\\Desktop\\hi.txt";
File file = new File(filePath);
        
try {
PrintWriter fw = new PrintWriter(file);
BufferedWriter bw = new BufferedWriter(fw);
bw.write("Name, Ic no., Email, Customer no.\n");
for (int i = 0; i < list.size(); i++){
   String name = list.get(i).getName();
   String ic = list.get(i).getIc();
   String Email = list.get(i).getEmail();
   String CNo = list.get(i).getHT();

Object[] data = {name , ic , Email , CNo};

bw.write(data[0]+"/"+data[1]+"/"+data[2]+"/"+data[3]+"\n");

//JOptionPane.showMessageDialog(null, "Successfully saved!!");
}
bw.close();
fw.close();
} 
catch (IOException ex) {
}       
}
});


btnImport.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {
String filePath = "C:\\Users\\a\\Desktop\\Customers.txt";
File file = new File(filePath);
        
model.getDataVector().removeAllElements();

try {
BufferedReader br = new BufferedReader(new FileReader(file));
// get the first line
// get the columns name from the first line
// set columns name to the jtable model
String firstLine = br.readLine().trim();
String[] columnsName = firstLine.split(",");
 //DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
model.setColumnIdentifiers(columnsName);
            
// get lines from txt file
Object[] tableLines = br.lines().toArray();
            
// extratct data from lines
// set data to jtable model
for(int i = 0; i < tableLines.length; i++)
{
    String line = tableLines[i].toString().trim();
    String[] dataRow = line.split("/");
    model.addRow(dataRow);
}      
} catch (Exception ex) {
}
}
});


// button add row - Clicked on Add Button
btnAdd.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {

row[0] = textname.getText();
row[1] = textic.getText();
row[2] = textemail.getText();
row[3] = textHT.getText();



// add row to the model
model.addRow(row);
}
});

// button remove row - Clicked on Delete Button
btnDelete.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {

// i = the index of the selected row
int i = table.getSelectedRow();
if (i >= 0) {

// remove a row from jtable
model.removeRow(i);
//remove information in index i    
list.remove(i);
} 
else {
System.out.println("There were issue while Deleting the Row(s).");
}
}
});

// get selected row data From table to textfields
table.addMouseListener(new MouseAdapter() {

@Override
public void mouseClicked(MouseEvent e) {

// i = the index of the selected row
int i = table.getSelectedRow();

textname.setText(model.getValueAt(i, 0).toString());
textic.setText(model.getValueAt(i, 1).toString());
textemail.setText(model.getValueAt(i, 2).toString());
textHT.setText(model.getValueAt(i, 3).toString());
}
});

// button update row - Clicked on Update Button
btnUpdate.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {

// i = the index of the selected row
int i = table.getSelectedRow();

if (i >= 0) {
model.setValueAt(textname.getText(), i, 0);
model.setValueAt(textic.getText(), i, 1);
model.setValueAt(textemail.getText(), i, 2);
model.setValueAt(textHT.getText(), i, 3);

list.get(i).setName(textname.getText()); 
list.get(i).setIc(textic.getText());
list.get(i).setEmail(textemail.getText());
list.get(i).setHT(textHT.getText());

} else {
System.out.println("Update Error");
}
}
});


// search textfield - type search text
Jsearch.getDocument().addDocumentListener(new DocumentListener(){

@Override
public void insertUpdate(DocumentEvent e) {
String text = Jsearch.getText();

if (text.trim().length() == 0) {
sorter.setRowFilter(null);
} else {
sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
}
}

@Override
public void removeUpdate(DocumentEvent e) {
String text = Jsearch.getText();

if (text.trim().length() == 0) {
sorter.setRowFilter(null);
} else {
sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
}
}

@Override
public void changedUpdate(DocumentEvent de) {
throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
}
});

// button Exit - Clicked on Exit Button
btnExit.addActionListener(new ActionListener() {

@Override
public void actionPerformed(ActionEvent e) {
System.exit(0);
}
});


frame.setSize(960, 450);
frame.setLocationRelativeTo(null);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.setVisible(true);
 
}
    
}
